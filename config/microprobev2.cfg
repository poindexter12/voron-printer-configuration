## --- BIQU BX (SKR-BX 2.0) with Microprobe V2 Klipper configuration ---
# I used MicroProbe with bracket for Ender3 (SKU: 1060000587*1+1060000658*1)

# Not much different from a standard probe config. The
# main difference compared to most probes is to disable
# deactivating the probe (PROBE_UP) after each sample

# Note: if you are changing from a bltouch or one of its
# clones, remove/comment out the [bltouch] config!
# That also includes any auto generated config stored
# at the bottom by the PROBE_CALIBRATE command
#
# This config is configured for
# the V2 microprobe. V1 users must update the 
# polarity of the sensor pin in the config to be 
# pull-up (^) not pull up (^!)

[output_pin probe_enable]
pin: EBBCan:gpio22 # Yellow wire, GPIO22 on RP2099
value: 0

[gcode_macro _probe_deploy]
gcode:
    SET_PIN PIN=probe_enable VALUE=1

[gcode_macro _probe_stow]
gcode:
    SET_PIN PIN=probe_enable VALUE=0

[probe]
pin: ^!EBBCan:gpio24
deactivate_on_each_sample: false
x_offset: 0.0 # Actual offset of the MicroProbe installation
y_offset: 18.82
z_offset: 0.25 #0.560 # Actual offset of the MicroProbe installation
speed: 5
lift_speed: 2
samples: 5
samples_result: median
samples_tolerance: 0.02
samples_tolerance_retries: 20
activate_gcode:
    _probe_deploy
    G4 P500
deactivate_gcode:
    _probe_stow

# Example bed_mesh config section
[bed_mesh]
speed: 100                  # probe travel speed (mm/s)
probe_count: 5, 5
algorithm: bicubic          # smooth interpolation
mesh_min: 20,20              # “probe tip” lower-left (X_tip=0, Y_tip=20)
mesh_max: 330,330           # “probe tip” upper-right (X_tip=350, Y_tip=350)
fade_start: 1.0             # begin fading out mesh compensation after 1 mm
fade_end: 10.0              # fully fade out by 10 mm above mesh
# Progressive quad gantry leveling macro with calculated speed, samples, and tolerance.
# Allows parameter overrides for passes, samples, speed, and tolerance.
[gcode_macro PROGRESSIVE_QGL]
description: Progressive quad gantry leveling with calculated speed, samples, and tolerance
variable_passes: 3
variable_base_samples: 1
variable_base_speed: 300
variable_base_tolerance: 0.15
gcode:
    # Retrieve macro parameters or default values
    {% set passes = params.PASSES|default(variables.passes)|int %}
    {% set base_samples = params.BASE_SAMPLES|default(variables.base_samples)|int %}
    {% set base_speed = params.BASE_SPEED|default(variables.base_speed)|float %}
    {% set base_tolerance = params.BASE_TOLERANCE|default(variables.base_tolerance)|float %}
    
    # Loop through the number of passes
    {% for i in range(passes) %}
        # Calculate progressive values based on loop index (i starts at 0)
        {% set samples = base_samples * (i + 1) %}
        {% set speed = base_speed / (i + 1) %}
        {% set tolerance = base_tolerance / (i + 1) %}
        
        # Display the current pass details on the printer screen
        M117 QGL Pass {{ i + 1 }} - {{ samples }} samples, Speed {{ speed|int }}, Tol {{ tolerance|round(3) }}
        
        # Run quad gantry leveling with calculated samples and speed
        QUAD_GANTRY_LEVEL SAMPLES={samples} SPEED={speed|int}
        
        # Capture the maximum deviation after this pass
        {% set dev = printer.quad_gantry_level.last_adjust %}
        
        # If the deviation is within calculated tolerance, stop further passes
        {% if dev <= tolerance %}
            M117 QGL Complete - Deviation: {dev}
            BREAK
        {% endif %}
    {% endfor %}