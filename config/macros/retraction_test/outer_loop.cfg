[gcode_macro _PRESSURE_ADVANCE_LOOP]
description: Outer loop for pressure advance values with pattern printing
parameters:
  START_ADVANCE: Starting pressure advance value
  END_ADVANCE: Ending pressure advance value
  INCREMENT: Increment between pressure advance values
  START_X: Starting X position for the first pattern
  START_Y: Y position for patterns (constant)
  Y_START: Starting Y position for pattern walls
  Y_END: Ending Y position for pattern walls
  E_INCREMENT: E value increment for each pattern wall
  X_WALL_OFFSET: X offset for drawing pattern walls
  STEP_DISTANCE: Distance to step between patterns within a group
  GROUP_SPACING: Additional spacing between pressure advance groups
  PRINT_SPEED: Print speed for pattern walls
  TRAVEL_SPEED: Travel speed for moves
  Z_HOP_DISTANCE: Z hop distance when retracting
  Z_HOP_RETURN: Z hop return distance when unretracting
  RETRACT_SPEED: Speed for retracting filament
  UNRETRACT_SPEED: Speed for unretracting filament
  RETRACT_DISTANCE: Distance to retract filament
gcode:
    ; Extract values from parameters into Jinja variables
    {% set start_advance = params.START_ADVANCE | float %}
    {% set end_advance = params.END_ADVANCE | float %}
    {% set increment = params.INCREMENT | float %}
    {% set start_x = params.START_X | float %}
    {% set start_y = params.START_Y | float %}
    {% set y_start = params.Y_START | float %}
    {% set y_end = params.Y_END | float %}
    {% set e_increment = params.E_INCREMENT | float %}
    {% set x_wall_offset = params.X_WALL_OFFSET | float %}
    {% set step_distance = params.STEP_DISTANCE | float %}
    {% set group_spacing = params.GROUP_SPACING | float %}
    {% set print_speed = params.PRINT_SPEED | float %}
    {% set travel_speed = params.TRAVEL_SPEED | float %}
    {% set z_hop_distance = params.Z_HOP_DISTANCE | float %}
    {% set z_hop_return = params.Z_HOP_RETURN | float %}
    {% set retract_speed = params.RETRACT_SPEED | float %}
    {% set unretract_speed = params.UNRETRACT_SPEED | float %}
    {% set retract_distance = params.RETRACT_DISTANCE | float %}

    ; Calculate loop variables
    {% set current_x = start_x %}
    {% set num_iterations = ((end_advance - start_advance) / increment) | round(0, 'ceil') | int %}
    
    ; Loop through pressure advance values
    {% for i in range(num_iterations + 1) %}
        {% set current_advance = start_advance + (i * increment) %}
        
        ; Set pressure advance value
        SET_PRESSURE_ADVANCE ADVANCE={{ current_advance }}
        M117 PA {{ current_advance }}
        
        ; Print 3 pattern walls for this pressure advance value
        ; Wall 1
        G1 X{{ current_x + x_wall_offset }} Y{{ y_end }} E{{ e_increment }} F{{ print_speed }} ; Print pattern wall
        G1 X{{ current_x }} Y{{ y_start }} E{{ e_increment }} F{{ print_speed }} ; Print pattern wall
        
        ; Retract and move to next pattern wall
        G1 E-{{ retract_distance }} F{{ retract_speed }} ; Retract
        G1 Z{{ z_hop_distance }} F{{ travel_speed }} ; Z hop
        G0 X{{ current_x + step_distance }} Y{{ start_y }} F{{ travel_speed }} ; Move to start next pattern wall
        G1 Z{{ z_hop_return }} F{{ travel_speed }} ; Z hop return
        G1 E{{ retract_distance }} F{{ unretract_speed }} ; Un-retract
        
        ; Wall 2
        G1 X{{ current_x + step_distance + x_wall_offset }} Y{{ y_end }} E{{ e_increment }} F{{ print_speed }} ; Print pattern wall
        G1 X{{ current_x + step_distance }} Y{{ y_start }} E{{ e_increment }} F{{ print_speed }} ; Print pattern wall
        
        ; Retract and move to next pattern wall
        G1 E-{{ retract_distance }} F{{ retract_speed }} ; Retract
        G1 Z{{ z_hop_distance }} F{{ travel_speed }} ; Z hop
        G0 X{{ current_x + (2 * step_distance) }} Y{{ start_y }} F{{ travel_speed }} ; Move to start next pattern wall
        G1 Z{{ z_hop_return }} F{{ travel_speed }} ; Z hop return
        G1 E{{ retract_distance }} F{{ unretract_speed }} ; Un-retract
        
        ; Wall 3
        G1 X{{ current_x + (2 * step_distance) + x_wall_offset }} Y{{ y_end }} E{{ e_increment }} F{{ print_speed }} ; Print pattern wall
        G1 X{{ current_x + (2 * step_distance) }} Y{{ y_start }} E{{ e_increment }} F{{ print_speed }} ; Print pattern wall
        
        ; Move to next pressure advance group (if not the last one)
        {% if i < num_iterations %}
            ; Retract and move to next pattern group
            G1 E-{{ retract_distance }} F{{ retract_speed }} ; Retract
            G1 Z{{ z_hop_distance }} F{{ travel_speed }} ; Z hop
            G0 X{{ current_x + (3 * step_distance) + group_spacing }} Y{{ start_y }} F{{ travel_speed }} ; Move to next pattern
            G1 Z{{ z_hop_return }} F{{ travel_speed }} ; Z hop return
            G1 E{{ retract_distance }} F{{ unretract_speed }} ; Un-retract
            
            ; Update X position for next group
            {% set current_x = current_x + (3 * step_distance) + group_spacing %}
        {% endif %}
    {% endfor %}
