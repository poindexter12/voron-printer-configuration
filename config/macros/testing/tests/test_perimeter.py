"""Test suite for comparing G-code files generated by Klipper macros with expected output."""

import pytest

from utils.gcode_helpers import run_gcode_comparison_test

# Test data for different layer types
first_layer_test_data = {
    'name': 'first_layer',
    'orig_file': '../fixtures/expected_gcode/perimeter_first_layer.gcode',
    'render_file': '../../retraction_test/draw_perimeter_layer.cfg',
    'params': {
        'START_X': 132.6417,
        'START_Y': 148.0068,
        'WIDTH': 84.7166,  # Actual width from expected G-code: 217.3583 - 132.6417
        'HEIGHT': 42.4264,  # Actual height from expected G-code: 190.4332 - 148.0068
        'LINE_WIDTH': 0.56,  # 140% of 0.4mm nozzle
        'LAYER_HEIGHT': 0.25,  # First layer height from G-code header
        'NUM_PERIMETERS': 4,
        'STEP_DISTANCE': 0.5063495408493621,  # Actual step distance from expected G-code: 133.148 - 132.6417
        'PRINT_FEEDRATE': 1800,  # 30 mm/s * 60 = 1800 mm/min
        'TRAVEL_FEEDRATE': 7200,  # 120 mm/s * 60 = 7200 mm/min
        'FILAMENT_DIAMETER': 1.7,
        'EXTRUSION_MULTIPLIER': 1.0
    }
}

other_layers_test_data = {
    'name': 'other_layers',
    'orig_file': '../fixtures/expected_gcode/perimeter_other_layers.gcode',
    'render_file': '../../retraction_test/draw_perimeter_layer.cfg',
    'params': {
        'START_X': 132.6417,
        'START_Y': 190.9396,  # Different Y start for subsequent layers
        'WIDTH': 64.2545,  # Actual width from expected G-code: 196.8962 - 132.6417
        'HEIGHT': 11.5063,  # Actual height from expected G-code: 202.4459 - 190.9396
        'LINE_WIDTH': 0.45,  # 112.5% of 0.4mm nozzle
        'LAYER_HEIGHT': 0.2,  # Subsequent layer height from G-code header
        'NUM_PERIMETERS': 4,
        'STEP_DISTANCE': 0.5063495408493621,  # Same step distance
        'PRINT_FEEDRATE': 1800,  # 30 mm/s * 60 = 1800 mm/min (same as first layer for this G-code)
        'TRAVEL_FEEDRATE': 7200,  # 120 mm/s * 60 = 7200 mm/min
        'FILAMENT_DIAMETER': 1.7,
        'EXTRUSION_MULTIPLIER': 1.0
    }
}



@pytest.mark.retraction
@pytest.mark.retraction.perimeter
def test_first_layer_perimeter(results_dir):
    """Test first layer perimeter generation (140% line width, 0.25mm height)."""
    diff_count = run_gcode_comparison_test(results_dir,
                      first_layer_test_data['orig_file'],
                      first_layer_test_data['render_file'],
                      first_layer_test_data['params'],
                      first_layer_test_data['name'])

    assert diff_count == 0, f"{first_layer_test_data['name']} perimeter test failed: {diff_count} differences found"


@pytest.mark.retraction
@pytest.mark.retraction.perimeter
def test_other_layers_perimeter(results_dir):
    """Test other layers perimeter generation (112.5% line width, 0.2mm height)."""
    diff_count = run_gcode_comparison_test(results_dir,
                      other_layers_test_data['orig_file'],
                      other_layers_test_data['render_file'],
                      other_layers_test_data['params'],
                      other_layers_test_data['name'])

    assert diff_count == 0, f"{other_layers_test_data['name']} perimeter test failed: {diff_count} differences found"

if __name__ == '__main__':
    pytest.main([__file__])
